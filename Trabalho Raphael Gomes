 Script de Cria√ß√£o do Banco e Tabelas (SQL Server)

-- Criar banco de dados
CREATE DATABASE LojaDB;
GO

-- Usar o banco de dados criado
USE LojaDB;
GO

-- Criar a sequence para ID de pessoa
CREATE SEQUENCE seq_pessoa_id
    START WITH 1
    INCREMENT BY 1;
GO

-- Tabela de usu√°rios
CREATE TABLE Usuario (
    id INT IDENTITY(1,1) PRIMARY KEY,
    nome_usuario VARCHAR(50) NOT NULL,
    senha VARCHAR(50) NOT NULL
);
GO

-- Tabela Pessoa (superclasse)
CREATE TABLE Pessoa (
    id INT PRIMARY KEY,
    nome VARCHAR(100),
    endereco VARCHAR(150),
    telefone VARCHAR(20),
    email VARCHAR(100)
);
GO

-- Pessoa F√≠sica
CREATE TABLE PessoaFisica (
    id INT PRIMARY KEY,
    cpf VARCHAR(14) NOT NULL UNIQUE,
    FOREIGN KEY (id) REFERENCES Pessoa(id)
);
GO

-- Pessoa Jur√≠dica
CREATE TABLE PessoaJuridica (
    id INT PRIMARY KEY,
    cnpj VARCHAR(18) NOT NULL UNIQUE,
    FOREIGN KEY (id) REFERENCES Pessoa(id)
);
GO

-- Tabela Produto
CREATE TABLE Produto (
    id INT IDENTITY(1,1) PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    quantidade INT NOT NULL,
    preco_venda DECIMAL(10,2) NOT NULL
);
GO

-- Tabela Movimenta√ß√£o
CREATE TABLE Movimentacao (
    id INT IDENTITY(1,1) PRIMARY KEY,
    tipo CHAR(1) CHECK (tipo IN ('E', 'S')), -- E=Entrada, S=Sa√≠da
    id_produto INT NOT NULL,
    id_operador INT NOT NULL,
    id_pessoa INT NOT NULL,
    quantidade INT NOT NULL,
    preco_unitario DECIMAL(10,2) NOT NULL,
    data_movimentacao DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (id_produto) REFERENCES Produto(id),
    FOREIGN KEY (id_operador) REFERENCES Usuario(id),
    FOREIGN KEY (id_pessoa) REFERENCES Pessoa(id)
);
GO


‚úÖ Inser√ß√£o de Dados
üîê Inserir usu√°rios (operadores)

INSERT INTO Usuario (nome_usuario, senha) VALUES ('op1', 'op1');
INSERT INTO Usuario (nome_usuario, senha) VALUES ('op2', 'op2');

üì¶ Inserir produtos

INSERT INTO Produto (nome, quantidade, preco_venda) VALUES ('Mouse', 100, 50.00);
INSERT INTO Produto (nome, quantidade, preco_venda) VALUES ('Teclado', 150, 80.00);
INSERT INTO Produto (nome, quantidade, preco_venda) VALUES ('Monitor', 50, 600.00);

üßë‚Äçüíº Inserir pessoas f√≠sicas

DECLARE @idPessoaFisica INT = NEXT VALUE FOR seq_pessoa_id;
INSERT INTO Pessoa (id, nome, endereco, telefone, email)
VALUES (@idPessoaFisica, 'Jo√£o Silva', 'Rua A, 123', '(11) 99999-0001', 'joao@email.com');

INSERT INTO PessoaFisica (id, cpf)
VALUES (@idPessoaFisica, '123.456.789-00');

DECLARE @idPessoaFisica2 INT = NEXT VALUE FOR seq_pessoa_id;
INSERT INTO Pessoa (id, nome, endereco, telefone, email)
VALUES (@idPessoaFisica2, 'Maria Oliveira', 'Rua B, 456', '(11) 99999-0002', 'maria@email.com');

INSERT INTO PessoaFisica (id, cpf)
VALUES (@idPessoaFisica2, '987.654.321-00');

üè¢ Inserir pessoas jur√≠dicas

DECLARE @idPessoaJuridica INT = NEXT VALUE FOR seq_pessoa_id;
INSERT INTO Pessoa (id, nome, endereco, telefone, email)
VALUES (@idPessoaJuridica, 'Tech Distribuidora', 'Av Central, 1000', '(11) 4002-8922', 'contato@tech.com');

INSERT INTO PessoaJuridica (id, cnpj)
VALUES (@idPessoaJuridica, '12.345.678/0001-99');

DECLARE @idPessoaJuridica2 INT = NEXT VALUE FOR seq_pessoa_id;
INSERT INTO Pessoa (id, nome, endereco, telefone, email)
VALUES (@idPessoaJuridica2, 'Mega Fornecedores', 'Av Norte, 200', '(11) 3003-1313', 'vendas@mega.com');

INSERT INTO PessoaJuridica (id, cnpj)
VALUES (@idPessoaJuridica2, '98.765.432/0001-11');

üîÑ Inserir movimenta√ß√µes
Entrada (compra de produtos de uma PJ):

-- Operador 1 compra 10 mouses da Tech Distribuidora
INSERT INTO Movimentacao (tipo, id_produto, id_operador, id_pessoa, quantidade, preco_unitario)
VALUES ('E', 1, 1, 3, 10, 45.00);

-- Operador 2 compra 5 monitores da Mega Fornecedores
INSERT INTO Movimentacao (tipo, id_produto, id_operador, id_pessoa, quantidade, preco_unitario)
VALUES ('E', 3, 2, 4, 5, 550.00);

Sa√≠da (venda de produtos para uma PF):

-- Operador 1 vende 2 mouses para Jo√£o Silva
INSERT INTO Movimentacao (tipo, id_produto, id_operador, id_pessoa, quantidade, preco_unitario)
VALUES ('S', 1, 1, 1, 2, 50.00);

-- Operador 2 vende 1 teclado para Maria Oliveira
INSERT INTO Movimentacao (tipo, id_produto, id_operador, id_pessoa, quantidade, preco_unitario)
VALUES ('S', 2, 2, 2, 1, 80.00);

üîç Consultas SQL Pedidas
1Ô∏è‚É£ Dados completos de pessoas f√≠sicas

SELECT p.id, p.nome, p.endereco, p.telefone, p.email, pf.cpf
FROM Pessoa p
JOIN PessoaFisica pf ON p.id = pf.id;

2Ô∏è‚É£ Dados completos de pessoas jur√≠dicas

SELECT p.id, p.nome, p.endereco, p.telefone, p.email, pj.cnpj
FROM Pessoa p
JOIN PessoaJuridica pj ON p.id = pj.id;

3Ô∏è‚É£ Movimenta√ß√µes de entrada (compra)

SELECT 
    m.id,
    pr.nome AS produto,
    p.nome AS fornecedor,
    m.quantidade,
    m.preco_unitario,
    (m.quantidade * m.preco_unitario) AS valor_total
FROM Movimentacao m
JOIN Produto pr ON pr.id = m.id_produto
JOIN Pessoa p ON p.id = m.id_pessoa
WHERE m.tipo = 'E';

4Ô∏è‚É£ Movimenta√ß√µes de sa√≠da (venda)

SELECT 
    m.id,
    pr.nome AS produto,
    p.nome AS comprador,
    m.quantidade,
    m.preco_unitario,
    (m.quantidade * m.preco_unitario) AS valor_total
FROM Movimentacao m
JOIN Produto pr ON pr.id = m.id_produto
JOIN Pessoa p ON p.id = m.id_pessoa
WHERE m.tipo = 'S';

5Ô∏è‚É£ Valor total das entradas agrupadas por produto

SELECT 
    pr.nome AS produto,
    SUM(m.quantidade * m.preco_unitario) AS total_entrada
FROM Movimentacao m
JOIN Produto pr ON pr.id = m.id_produto
WHERE m.tipo = 'E'
GROUP BY pr.nome;

6Ô∏è‚É£ Valor total das sa√≠das agrupadas por produto

SELECT 
    pr.nome AS produto,
    SUM(m.quantidade * m.preco_unitario) AS total_saida
FROM Movimentacao m
JOIN Produto pr ON pr.id = m.id_produto
WHERE m.tipo = 'S'
GROUP BY pr.nome;

7Ô∏è‚É£ Operadores que n√£o efetuaram movimenta√ß√µes de entrada

SELECT u.id, u.nome_usuario
FROM Usuario u
WHERE u.id NOT IN (
    SELECT DISTINCT id_operador
    FROM Movimentacao
    WHERE tipo = 'E'
);

8Ô∏è‚É£ Valor total de entrada, agrupado por operador

SELECT u.nome_usuario, SUM(m.quantidade * m.preco_unitario) AS total_entrada
FROM Movimentacao m
JOIN Usuario u ON u.id = m.id_operador
WHERE m.tipo = 'E'
GROUP BY u.nome_usuario;

9Ô∏è‚É£ Valor total de sa√≠da, agrupado por operador

SELECT u.nome_usuario, SUM(m.quantidade * m.preco_unitario) AS total_saida
FROM Movimentacao m
JOIN Usuario u ON u.id = m.id_operador
WHERE m.tipo = 'S'
GROUP BY u.nome_usuario;

üîü Valor m√©dio de venda por produto (m√©dia ponderada)

SELECT 
    p.nome AS produto,
    SUM(m.quantidade * m.preco_unitario) * 1.0 / SUM(m.quantidade) AS media_ponderada
FROM Movimentacao m
JOIN Produto p ON p.id = m.id_produto
WHERE m.tipo = 'S'
GROUP BY p.nome;


